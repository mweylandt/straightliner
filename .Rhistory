document()
document()
load_all()
?meanRootPairs
?straightlining
document()
load()
load_all()
varlist = list ("democracy" = c("dem_importance",
"dem_today",
"dem_satisfaction"),
"conversions" = c("edu_us_w",
"dem_importance",
"pol_t_anes_w", # factor from numeric
"party_US_w" # factor from text
))
dat <- read_rds("sample_data.rds")
x <- dat
variable_list = varlist
measures = c("mrp", "mir", "qsd", "spv", "nondiff")
round_digits=2
verbose = FALSE
k <- straightlining_report(dat,
variable_list = varlist,
verbose = TRUE,
round_digits = 5)
if (!is.list(variable_list)) {
stop("variable_list is supposed to be a named list")
}
results_tab <-
matrix(ncol = length(measures), nrow = length(variable_list))
# make results table
rownames(results_tab) <- names(variable_list)
results_tab <- as.data.frame(results_tab)
names(results_tab) = measures
for (i in 1:length(variable_list)) {
if(verbose){
cat("Battery: \n")
cat(names(variable_list[i]))
cat("\n")
}
# subset dataset
df <- x[variable_list[[i]]]
df <- convert_data(df)
t <- data.frame(id = rep(NA, nrow(x)))
# do straightlining measures and return
# relevant stats
if ("mrp" %in% measures) {
t$mrp <- meanRootPairs(df, verbose = verbose, clean_data = FALSE, round_digits = round_digits)
results_tab$mrp[i] <- mean(t$mrp, na.rm = TRUE)
}
if ("mir" %in% measures) {
t$mir <- maxIdenticalRating(df, verbose = verbose, clean_data = FALSE, round_digits = round_digits)
results_tab$mir[i] <- mean(t$mir, na.rm = TRUE)
}
if ("qsd" %in% measures) {
t$qsd <- question_sd(df, verbose = verbose, clean_data = FALSE, round_digits = round_digits)
results_tab$qsd[i] <- mean(t$qsd, na.rm = TRUE)
}
if ("spv" %in% measures) {
t$spv <- scale_point_variation(df, verbose = verbose,  clean_data = FALSE, round_digits = round_digits)
results_tab$spv[i] <- mean(t$spv, na.rm = TRUE)
}
if ("nondiff" %in% measures) {
t$nondiff <- nondiff(df, verbose = verbose, clean_data = FALSE, round_digits = round_digits)
results_tab$nondiff[i] <- mean(t$nondiff, na.rm = TRUE)
}
} # end of loop
results_tab
class(results_tab)  <- c("straightliner", class(results_tab))
attr(results_tab, "spv") <- "hi"
print(results_tab, digits = round_digits)
str(results_tab)
load_all()
k <- straightlining_report(dat,
variable_list = varlist,
verbose = TRUE,
round_digits = 5)
varlist = list ("democracy" = c("dem_importance",
"dem_today",
"dem_satisfaction"),
"conversions" = c("edu_us_w",
"dem_importance",
"pol_t_anes_w", # factor from numeric
"party_US_w" # factor from text
))
dat <- read_rds("sample_data.rds")
x <- dat
variable_list = varlist
measures = c("mrp", "mir", "qsd", "spv", "nondiff")
round_digits=2
verbose = FALSE
if (!is.list(variable_list)) {
stop("variable_list is supposed to be a named list")
}
results_tab <-
matrix(ncol = length(measures), nrow = length(variable_list))
# make results table
rownames(results_tab) <- names(variable_list)
results_tab <- as.data.frame(results_tab)
names(results_tab) = measures
for (i in 1:length(variable_list)) {
if(verbose){
cat("Battery: \n")
cat(names(variable_list[i]))
cat("\n")
}
# subset dataset
df <- x[variable_list[[i]]]
df <- convert_data(df)
t <- data.frame(id = rep(NA, nrow(x)))
# do straightlining measures and return
# relevant stats
if ("mrp" %in% measures) {
t$mrp <- meanRootPairs(df, verbose = verbose, clean_data = FALSE, round_digits = round_digits)
results_tab$mrp[i] <- mean(t$mrp, na.rm = TRUE)
}
if ("mir" %in% measures) {
t$mir <- maxIdenticalRating(df, verbose = verbose, clean_data = FALSE, round_digits = round_digits)
results_tab$mir[i] <- mean(t$mir, na.rm = TRUE)
}
if ("qsd" %in% measures) {
t$qsd <- question_sd(df, verbose = verbose, clean_data = FALSE, round_digits = round_digits)
results_tab$qsd[i] <- mean(t$qsd, na.rm = TRUE)
}
if ("spv" %in% measures) {
t$spv <- scale_point_variation(df, verbose = verbose,  clean_data = FALSE, round_digits = round_digits)
results_tab$spv[i] <- mean(t$spv, na.rm = TRUE)
}
if ("nondiff" %in% measures) {
t$nondiff <- nondiff(df, verbose = verbose, clean_data = FALSE, round_digits = round_digits)
results_tab$nondiff[i] <- mean(t$nondiff, na.rm = TRUE)
}
} # end of loop
class(results_tab)  <- c("straightliner", class(results_tab))
print(results_tab, digits = round_digits)
View(t)
max(t$spv)
load_all()
if (!is.list(variable_list)) {
stop("variable_list is supposed to be a named list")
}
results_tab <-
matrix(ncol = length(measures), nrow = length(variable_list))
# make results table
rownames(results_tab) <- names(variable_list)
results_tab <- as.data.frame(results_tab)
names(results_tab) = measures
for (i in 1:length(variable_list)) {
if(verbose){
cat("Battery: \n")
cat(names(variable_list[i]))
cat("\n")
}
# subset dataset
df <- x[variable_list[[i]]]
df <- convert_data(df)
t <- data.frame(id = rep(NA, nrow(x)))
# do straightlining measures and return
# relevant stats
if ("mrp" %in% measures) {
t$mrp <- meanRootPairs(df, verbose = verbose, clean_data = FALSE, round_digits = round_digits)
results_tab$mrp[i] <- mean(t$mrp, na.rm = TRUE)
}
if ("mir" %in% measures) {
t$mir <- maxIdenticalRating(df, verbose = verbose, clean_data = FALSE, round_digits = round_digits)
results_tab$mir[i] <- mean(t$mir, na.rm = TRUE)
}
if ("qsd" %in% measures) {
t$qsd <- question_sd(df, verbose = verbose, clean_data = FALSE, round_digits = round_digits)
results_tab$qsd[i] <- mean(t$qsd, na.rm = TRUE)
}
if ("spv" %in% measures) {
t$spv <- scale_point_variation(df, verbose = verbose,  clean_data = FALSE, round_digits = round_digits)
results_tab$spv[i] <- mean(t$spv, na.rm = TRUE)
results_tab$spv_max[i] <- max(t$spv, na.rm = TRUE)
}
if ("nondiff" %in% measures) {
t$nondiff <- nondiff(df, verbose = verbose, clean_data = FALSE, round_digits = round_digits)
results_tab$nondiff[i] <- mean(t$nondiff, na.rm = TRUE)
}
} # end of loop
View(t)
str(t)
scale_point_variation(dat, "dem_importance")
s <- scale_point_variation(dat, "dem_importance")
attr(s)
attr(s, "spv_max")
s <-straightlining(dat, "dem_today")
x <- dat
varnames = "dem_today"
verbose = TRUE
clean_data = TRUE
round_digits = 2
if(is.null(varnames)) {
varnames = names(x)}
dat <- read_rds("sample_data.rds")
x <- dat
varnames = "dem_today"
clean_data = TRUE
round_digits = 2
if(is.null(varnames)) {
varnames = names(x)}
df <- x[varnames]
if (clean_data) {
df <- convert_data(df)
}
combos <- utils::combn(names(df), m=2, simplify = FALSE)
load_all()
s <-straightlining(dat, "dem_today")
s <-straightlining(dat, "dem_today")
s <-straightlining(dat, "dem_today")
s <-straightlining(dat, "dem_today")
s <-straightlining(dat, c("dem_today", "dem_satisfaction"))
attr(s, "spv_max")
load_all()
s <-straightlining(dat, c("dem_today", "dem_satisfaction"))
attr(s, "spv_max")
test <- c(2,3,2,5,2,2,2,1,4,3,2)
norm <- function(x) {
mode <- as.numeric(names(sort(table(test),decreasing=TRUE)[1])[1])
x-mode
}
x-mode
test <- c(2,3,2,5,2,2,2,1,4,3,2)
mode <- as.numeric(names(sort(table(test),decreasing=TRUE)[1])[1])
x-mode
test <- c(2,3,2,5,2,2,2,1,4,3,2)
norm <- function(x) {
mode <- as.numeric(names(sort(table(x),decreasing=TRUE)[1])[1])
x-mode
}
norm(test)
# so you get a matrix of respondents * questions
# you do this, then pivot (or before, whatever)
survey <- data.frame("respondent" = c("A", "B"),
"item1" = c(5, 5),
"item2" = c(5, 5),
"item3" = c(5, 5),
"item4" = c(5, 1))
apply(survey, 1, norm)
# so you get a matrix of respondents * questions
# you do this, then pivot (or before, whatever)
survey <- data.frame(
"item1" = c(5, 5),
"item2" = c(5, 5),
"item3" = c(5, 5),
"item4" = c(5, 1))
apply(survey, 1, norm)
mapply(survey, 1, norm)
mapply(survey, norm)
lapply(survey, 1, norm)
lapply(survey,  norm)
survey
lapply(survey, 1, norm)
apply(survey, 1, norm)
t( apply(survey, 1, norm) )
survey <- t( apply(survey, 1, norm) )
survey
survey %>% as.data.frame() %>% rownames_to_columns("id")
library(tidyverse)
survey %>% as.data.frame() %>% rownames_to_columns("id")
survey %>% as.data.frame() %>% rownames_to_column("var")
survey %>% as.data.frame() %>% rownames_to_column("id")
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id)
survey %>% as.data.frame()
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id)
survey %>% as.data.frame() %>%
rownames_to_column("id", name = "question", value = "response") %>%
pivot_longer(cols=-id) %>%
ggplot() +
aes(x = question, y = response)
library(tidyverse)
survey %>% as.data.frame() %>%
rownames_to_column("id", name = "question", value = "response")
survey %>% as.data.frame() %>%
rownames_to_column("id", names = "question", values = "response") %>%
pivot_longer(cols=-id) %>%
ggplot() +
aes(x = question, y = response)
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names = "question", values = "response") %>%
ggplot() +
aes(x = question, y = response)
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names = "question") %>%
ggplot() +
aes(x = question, y = response)
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id) %>%
ggplot() +
aes(x = question, y = response)
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names_to = "question", values_to = "response") %>%
ggplot() +
aes(x = question, y = response)
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names_to = "question", values_to = "response") %>%
ggplot() +
aes(x = question, y = response)+
geom_point() +
theme_bw()
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names_to = "question", values_to = "response") %>%
ggplot() +
aes(x = question, y = response)+
geom_point() +
geom_line(aes(group = id))
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names_to = "question", values_to = "response") %>%
ggplot() +
aes(x = question, y = response)+
geom_point() +
geom_line(aes(group = id), color = id)
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names_to = "question", values_to = "response") %>%
ggplot() +
aes(x = question, y = response)+
geom_point() +
geom_line(aes(group = id, color = id))
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names_to = "question", values_to = "response") %>%
ggplot() +
aes(x = question, y = response)+
geom_point() +
geom_line(aes(group = id, color = id))+
theme_bw()
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names_to = "question", values_to = "response") %>%
ggplot() +
aes(x = question, y = response)+
geom_jitter(height = 0.1)) +
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names_to = "question", values_to = "response") %>%
ggplot() +
aes(x = question, y = response)+
geom_jitter(height = 0.1) +
geom_line(aes(group = id, color = id))+
theme_bw()
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names_to = "question", values_to = "response") %>%
ggplot() +
aes(x = question, y = response)+
geom_jitter(aes(color = id),height = 0.1) +
geom_line(aes(group = id, color = id))+
theme_bw()
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names_to = "question", values_to = "response") %>%
ggplot() +
aes(x = question, y = response)+
geom_jitter(aes(color = id),height = 0.1) +
geom_line(aes(group = id, color = id), position = position_nudge(y=0.1))+
theme_bw()
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names_to = "question", values_to = "response") %>%
ggplot() +
aes(x = question, y = response)+
geom_point(aes(color = id),height = 0.1, position = position_nudge(y=0.1)) +
geom_line(aes(group = id, color = id), position = position_nudge(y=0.1))+
theme_bw()
survey %>% as.data.frame() %>%
rownames_to_column("id") %>%
pivot_longer(cols=-id, names_to = "question", values_to = "response") %>%
ggplot() +
aes(x = question, y = response)+
geom_point(aes(color = id),height = 0.1) +
geom_line(aes(group = id, color = id))+
theme_bw()
usethis::use_logo(img = "logo.png")
library(dplyr)
band_members
storms
load)all()
load_all()
devtools::load_all()
?straightlining()
load_all()
library(devtools)
load_all()
survey <- data.frame("respondent" = c("A", "B", "C"),
"item1" = c(5, 5, 4),
"item2" = c(5, 5, 2),
"item3" = c(5, 5, 5),
"item4" = c(5, 1, 3))
st_results <- straightlining(survey, varnames = c("item1", "item3" "item4"))
survey <- data.frame("respondent" = c("A", "B", "C"),
"item1" = c(5, 5, 4),
"item2" = c(5, 5, 2),
"item3" = c(5, 5, 5),
"item4" = c(5, 1, 3))
st_results <- straightlining(survey, varnames = c("item1", "item3" "item4"))
st_results <- straightlining(survey, varnames = c("item1", "item3", "item4"))
st_results
survey
st_results <- straightlining(survey, varnames = c("item1", "item3", "item4"))
st_results
survey <- straightlining(survey, varnames = c("item1", "item3", "item4"), keep_original = TRUE)
survey
batteries <- list("first two" = c("item1", "item2"),
"second two" = 1:2)
straightlining_report(survey, batteries, measures = c("mrp", "spv"))
batteries <- list("first two" = c("item1", "item2"),
"two and three" = 3:4)
straightlining_report(survey, batteries, measures = c("mrp", "spv"))
?quanteda.textstas
?quanteda.textstat
library(quanteda.textstats)
?quanteda.textstats
usethis::use_package_doc()
load_all()
?straightlining
?straightlining()
available("straightliner")
library(available)
available("straightliner")
?available()
options(timeout=500)
available("straightliner")
usethis::use_logo("straightlinR.png")
load_all()
?straightlining
?careless
library(careless)
?careless
careless_dataset
library(devtools)
document()
document()
load_all()
?straightliner
?quanteda.textstats
library(quanteda.textstats)
?quanteda.textstats
document()
?quanteda.textstats
?straightliner
pkgload::dev_help('straightliner-package')
document()
load_all()
?straightliner
use_readme_rmd()
batterries <- list("first two" = 1:2,
"second two" = c("item3", "item4"))
straightlining_report(survey, batteries, measures = c("mrp", "spv"))
devtools::build_readme()
devtools::build_readme()
library(straightlining)
survey <- data.frame("respondent" = c("A", "B", "C"),
"item1" = c(5, 5, 4),
"item2" = c(5, 5, 2),
"item3" = c(5, 5, 5),
"item4" = c(5, 1, 3))
st_results <- straightlining(survey, varnames = c("item1", "item3" ,"item4"))
st_results
batteries <- list("first two" = 1:2,
"second two" = c("item3", "item4"))
straightlining_qset(survey, batteries, measures = c("mrp", "spv"))
straightlining_qset(survey, batteries, measures = c("mrp", "spv"))
devtools::build_readme()
document()
document
document()
devtools::build_readme()
library(straightlining)
survey <- data.frame("respondent" = c("A", "B", "C"),
"item1" = c(5, 5, 4),
"item2" = c(5, 5, 2),
"item3" = c(5, 5, 5),
"item4" = c(5, 1, 3))
st_results <- straightlining(survey, varnames = c("item1", "item3" ,"item4"))
st_results
.Last.error
devtools::build_readme()
$stdout
.Last.error
load_all()
devtools::build_readme()
devtools::build_readme()
usethis::use_logo("logo.png")
devtools::build_readme()
devtools::build_readme()
document()
load_all()
?straightliner
check()
check()
check()
citation("straightliner")
?globalVariables
check()
utils::globalVariables("round_digits")
utils::globalVariables("round_digits")
check()
check()
